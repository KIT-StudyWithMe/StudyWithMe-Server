# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:alpine

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - artifacts
  - publish

build:
  stage: build
  script:
    - gradle bootJar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - main

test:
  stage: test
  script: gradle test jacocoTestReport
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/reports/jacoco/test/jacocoTestReport.xml
      - build/jacocoHtml/*

coverage:
  # Must be in a stage later than test-jdk11's stage.
  # The `visualize` stage does not exist by default.
  # Please define it first, or chose an existing stage like `deploy`.
  stage: artifacts
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py build/reports/jacoco/test/jacocoTestReport.xml $CI_PROJECT_DIR/src/main/kotlin/ > build/cobertura.xml
  needs: ["test"]
  artifacts:
    reports:
      cobertura: build/cobertura.xml

documentation:
  stage: artifacts
  script:
    - gradle dokkaHtml
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/dokka/*
    expire_in: 1 week
  only:
    - main

docker:
  image: docker:latest
  services:
    - docker:dind
  stage: artifacts
  before_script:
    - echo $CI_REGISTRY
    - docker logout
      #- docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo -n $CI_REGISTRY_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - export VERSION=$(cat build.gradle.kts | grep "version = " | awk '{print $3}' | tr -d '"')
    - cd build/libs/
    - docker build 
      -f ../../Dockerfile . 
      --build-arg VERSION="${VERSION}"
      -t "${CI_REGISTRY_IMAGE}:${VERSION}"
      -t "${CI_REGISTRY_IMAGE}:latest" 
    - docker push "${CI_REGISTRY_IMAGE}:latest"     
    - docker push "${CI_REGISTRY_IMAGE}:${VERSION}"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  only:
    - main


pages:
  stage: publish
  dependencies:
    - test
    - documentation
  script:
    - ls build/dokka/
    - ls build/jacocoHtml/
  only:
    - main
